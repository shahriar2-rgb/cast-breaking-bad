{"version":3,"sources":["img/logo.png","components/ui/Header.js","components/characters/CharacterItem.js","img/spinner.gif","components/ui/Spinner.js","components/characters/CharacterGrid.js","components/ui/Search.js","App.js","index.js"],"names":["Header","className","src","logo","alt","CharacterItem","item","img","name","portrayed","nickname","birthday","status","Spinner","spinner","style","width","margin","display","CharacterGrid","items","isLoading","map","char_id","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autofocus","App","setItems","setIsLoading","query","setQuery","useEffect","a","axios","result","data","fetchItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAAe,G,OAAA,IAA0B,kCCY1BA,EARA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKC,IAAKC,EAAMC,IAAI,QCwBfC,EA7BK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,qBAAKL,UAAU,OAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKI,EAAKC,IAAKH,IAAI,OAE1B,sBAAKH,UAAU,YAAf,UACE,6BAAKK,EAAKE,OACV,+BACE,+BACE,iDADF,IACgCF,EAAKG,aAErC,+BACE,+CADF,IAC8BH,EAAKI,YAEnC,+BACE,+CADF,IAC8BJ,EAAKK,YAEnC,+BACE,6CADF,IAC4BL,EAAKM,sBCtBhC,MAA0B,oCCS1BC,EANC,WACZ,OACI,qBAAKX,IAAKY,EAASC,MAAO,CAACC,MAAM,QAASC,OAAO,OAAQC,QAAQ,SAAUd,IAAI,aCOxEe,EARO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MACpB,OADwC,EAAbC,UACR,cAAC,EAAD,IAAc,yBAASpB,UAAU,QAAnB,SAC5BmB,EAAME,KAAI,SAAChB,GAAD,OACP,cAAC,EAAD,CAAkCA,KAAMA,GAApBA,EAAKiB,eCiBtBC,G,OArBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,SAAY,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,KAMzB,OACI,yBAAS3B,UAAU,SAAnB,SACI,+BACI,uBAAO4B,KAAK,OACZ5B,UAAU,eACV6B,YAAY,uBACZC,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAXNC,EAWqBD,EAAEE,OAAOJ,MAV1CH,EAAQM,QACRT,EAASS,GAFE,IAACA,GAYJE,WAAS,UCaVC,EAvBH,WAAM,IAAD,EACWX,mBAAS,IADpB,mBACRN,EADQ,KACDkB,EADC,OAEmBZ,oBAAS,GAF5B,mBAERL,EAFQ,KAEGkB,EAFH,OAGUb,mBAAS,IAHnB,mBAGRc,EAHQ,KAGDC,EAHC,KAcf,OATAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACIC,IAAM,sDAAD,OAAuDJ,IADhE,OACXK,EADW,OAGjBP,EAASO,EAAOC,MAChBP,GAAa,GAJI,2CAAH,qDAMhBQ,KACA,CAACP,IAED,sBAAKvC,UAAU,YAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAQwB,SAAU,SAACS,GAAD,OAAMO,EAASP,MACjC,cAAC,EAAD,CAAeb,UAAWA,EAAWD,MAAOA,QCpBjD4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c7394a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","import React from 'react';\nimport logo from '../../img/logo.png'\n\n\nconst Header = ()=>{\n    return(\n        <header className='center'>\n            <img src={logo} alt=\"\"/>\n        </header>\n    )\n}\n\nexport default Header","import React from 'react'\n\nconst CharacterItem = ({ item }) => {\n    return (\n      <div className='card'>\n        <div className='card-inner'>\n          <div className='card-front'>\n            <img src={item.img} alt='' />\n          </div>\n          <div className='card-back'>\n            <h1>{item.name}</h1>\n            <ul>\n              <li>\n                <strong>Actor Name:</strong> {item.portrayed}\n              </li>\n              <li>\n                <strong>Nickname:</strong> {item.nickname}\n              </li>\n              <li>\n                <strong>Birthday:</strong> {item.birthday}\n              </li>\n              <li>\n                <strong>Status:</strong> {item.status}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  \n  export default CharacterItem","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import Router from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () =>{\n    return (\n        <img src={spinner} style={{width:'200px', margin:'auto', display:'block'}} alt='Loading'/>\n    )\n}\n\nexport default Spinner","import React from 'react'\nimport CharacterItem from './CharacterItem'\nimport Spinner from'../ui/Spinner'\n\nconst CharacterGrid = ({items, isLoading})=>{\n    return isLoading ? <Spinner />: (<section className=\"cards\">\n        {items.map((item)=>(\n            <CharacterItem key={item.char_id} item={item}></CharacterItem>\n        ))}\n    </section>)\n}\n\nexport default CharacterGrid","import { getSuggestedQuery } from '@testing-library/react'\nimport React, { useState} from 'react'\n\nconst Search = ({getQuery})=>{\nconst [text, setText] = useState('')\n    const onChange=(q)=>{\n        setText(q)\n        getQuery(q)\n    }\n    return (\n        <section className=\"search\">\n            <form>\n                <input type='text' \n                className='form-control' \n                placeholder='Search Characters...' \n                value={text} \n                onChange={(e)=> onChange(e.target.value)}\n                autofocus/>\n            </form>\n        </section>\n    )\n}\n\n\nexport default Search","import React , {useState, useEffect} from 'react'; \nimport axios from 'axios'\nimport './App.css';\nimport Header from './components/ui/Header'\nimport CharacterGrid from './components/characters/CharacterGrid'\nimport Search from './components/ui/Search'\n\nconst App = ()=> {\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [query, setQuery]= useState('')\n\n  useEffect(()=>{\n    const fetchItems = async () =>{\n      const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\n\n      setItems(result.data)\n      setIsLoading(false)\n    }\n    fetchItems()\n  },[query] )\n  return (\n    <div className=\"container\">\n     <Header />\n     <Search getQuery={(q)=> setQuery(q)} />\n     <CharacterGrid isLoading={isLoading} items={items}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}